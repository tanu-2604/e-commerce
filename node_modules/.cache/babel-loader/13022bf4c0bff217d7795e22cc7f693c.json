{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\tanu\\\\src\\\\components\\\\productdetails\\\\ProductDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardActions, CardHeader, CardMedia, CardTitle, CardText, CardContent, Button, makeStyles, Paper, Grid } from '@material-ui/core';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\nimport { addToCart } from '../../actions/productActions';\nconst useStyles = makeStyles({\n  root: {\n    marginTop: \"155px\"\n  },\n  head: {\n    textAlign: \"center\"\n  }\n});\n\nconst ProductDetails = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [productDetail, setProductDetail] = useState([]);\n  useEffect(() => {\n    console.log(\"mera\");\n    fetch(`https://fakestoreapi.com/products/${id}`).then(res => res.json()).then(json => {\n      setProductDetail(json);\n    });\n  }, []);\n\n  const toCart = item => {\n    dispatch(addToCart(item));\n    history.push(\"/carts\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true //   className={classes.gridContainer}\n    ,\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.head,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            className: classes.root,\n            title: productDetail.title,\n            subtitle: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: productDetail.image,\n              width: \"70\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n            title: productDetail.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: productDetail.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: '/',\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Back to Product List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => toCart(productDetail),\n              children: \"Add to cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 31\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 29\n  }, this);\n};\n\n_s(ProductDetails, \"n/X4pO5ksg0nfCNcFDBxNgWrDlA=\", false, function () {\n  return [useParams, useStyles, useHistory, useDispatch];\n});\n\n_c = ProductDetails;\n\nconst mapStateToProps = state => ({\n  cartProps: state.cartProduct\n});\n\nexport default connect(mapStateToProps)(ProductDetails);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"sources":["E:/tanu/src/components/productdetails/ProductDetails.js"],"names":["React","useState","useEffect","Card","CardActions","CardHeader","CardMedia","CardTitle","CardText","CardContent","Button","makeStyles","Paper","Grid","Link","useHistory","useParams","connect","useDispatch","addToCart","useStyles","root","marginTop","head","textAlign","ProductDetails","id","classes","history","dispatch","productDetail","setProductDetail","console","log","fetch","then","res","json","toCart","item","push","title","image","price","description","mapStateToProps","state","cartProps","cartProduct"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText, CardContent, Button, makeStyles, Paper, Grid} from '@material-ui/core';\r\nimport { Link,useHistory,useParams } from 'react-router-dom';\r\nimport { connect,useDispatch } from 'react-redux';\r\nimport {addToCart} from '../../actions/productActions'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        marginTop:\"155px\"\r\n    },\r\n    head:{\r\n        textAlign:\"center\"\r\n    }\r\n})\r\n\r\nconst ProductDetails = () => {\r\n    const {id} = useParams()\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [productDetail,setProductDetail] = useState([])\r\n    useEffect(() => {\r\n        console.log(\"mera\")\r\n        fetch(`https://fakestoreapi.com/products/${id}`)\r\n        .then(res=>res.json())\r\n        .then(json => {\r\n            setProductDetail(json)\r\n            }\r\n        )\r\n    }, [])\r\n    const toCart = (item) =>{\r\n        dispatch(addToCart(item));\r\n              history.push(\"/carts\")\r\n       } \r\n\r\n\r\n                           return(\r\n                            <Grid\r\n                            container\r\n                           \r\n                          //   className={classes.gridContainer}\r\n                            justify=\"center\"\r\n                          >\r\n                              <Grid item xs={12} lg={4}>\r\n                               <Paper className={classes.head}>\r\n                            <Card>\r\n                            <CardHeader className={classes.root} title={productDetail.title} subtitle=\"\"/>\r\n                            <CardMedia\r\n                                >\r\n                                <img src={productDetail.image} width=\"70\" alt=\"\"/>\r\n                            </CardMedia>\r\n                            <CardHeader title={productDetail.price} />\r\n                            <CardContent>{productDetail.description}</CardContent>\r\n                            <CardActions>\r\n                            <Link to={'/'}>\r\n                                <Button variant=\"contained\" color=\"primary\">\r\n                                    Back to Product List\r\n                                </Button>\r\n                                </Link>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => toCart(productDetail)}>Add to cart</Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                        </Paper>\r\n                        </Grid>\r\n                        </Grid>\r\n                           )\r\n                       \r\n}\r\nconst mapStateToProps = (state) => ({\r\n    cartProps: state.cartProduct\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductDetails);\r\n"]},"metadata":{},"sourceType":"module"}